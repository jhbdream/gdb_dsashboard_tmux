python
import subprocess as sp
import os

NULLPROG = "sh -c 'while [ 1 = 1 ]; do sleep 100; done'"

def tmux(*args):
    return sp.check_output(['tmux'] + list(args)).decode('utf8')

def set_title(tty, title):
    with open(tty, 'ab') as t:
        t.write(b'\x1b]2;' + title.encode('utf8') + b'\x1b\\')

tmux('setw', 'remain-on-exit', 'off')

# gdb command
main_pane, main_tty = tmux('display-message', '-p' , '-F', '#{pane_id},#{pane_tty}').strip().split(',')
set_title(main_tty, 'main')

# asm
asm_pane, asm_tty = tmux('split-window', '-b', '-v', '-P', '-F', '#{pane_id},#{pane_tty}', NULLPROG).strip().split(',')
sp.check_call(['stty', '--file', asm_tty, '-echo'])
set_title(asm_tty, 'asm')
gdb.execute('dashboard assembly -output' + asm_tty)

# source
source_pane, source_tty = tmux('split-window', '-d', '-h', '-P', '-F', '#{pane_id},#{pane_tty}', NULLPROG).strip().split(',')
set_title(source_tty, 'source')
sp.check_call(['stty', '--file', source_tty, '-echo'])
gdb.execute('dashboard source -output' + source_tty)

# switch force
tmux('select-pane', '-t' + main_pane)

# register
reg_pane, reg_tty = tmux('split-window', '-d', '-v', '-P', '-F', '#{pane_id},#{pane_tty}', NULLPROG).strip().split(',')
set_title(reg_tty, 'reg')
sp.check_call(['stty', '--file', reg_tty, '-echo'])
gdb.execute('dashboard registers -output' + reg_tty)


end

# make sure dashboard output is updated when gdb state changes
define hookpost-up
dashboard
end

define hookpost-down
dashboard
end

define hookpost-thread
dashboard
end

define hookpost-delete
dashboard
end

define hookpost-clear
dashboard
end

define hookpost-break
dashboard
end

define hookpost-load
dashboard
end
# vim: set ft=python:

